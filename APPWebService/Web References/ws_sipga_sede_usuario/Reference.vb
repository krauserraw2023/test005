'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace ws_sipga_sede_usuario
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UsuarioSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Usuario
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private VersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IniciarSesionVisitaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarClaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrearUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrearUsuariov2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.APPWebService.My.MySettings.Default.APPWebService_ws_sipga_sede_usuario_Usuario
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event VersionCompleted As VersionCompletedEventHandler
        
        '''<remarks/>
        Public Event IniciarSesionVisitaCompleted As IniciarSesionVisitaCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarClaveCompleted As CambiarClaveCompletedEventHandler
        
        '''<remarks/>
        Public Event CrearUsuarioCompleted As CrearUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event CrearUsuariov2Completed As CrearUsuariov2CompletedEventHandler
        
        '''<remarks/>
        Public Event ListarUsuarioCompleted As ListarUsuarioCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Version", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Version() As String
            Dim results() As Object = Me.Invoke("Version", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VersionAsync()
            Me.VersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VersionAsync(ByVal userState As Object)
            If (Me.VersionOperationCompleted Is Nothing) Then
                Me.VersionOperationCompleted = AddressOf Me.OnVersionOperationCompleted
            End If
            Me.InvokeAsync("Version", New Object(-1) {}, Me.VersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VersionCompleted(Me, New VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IniciarSesionVisita", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IniciarSesionVisita(ByVal UsuarioLogin As String, ByVal Clave As String) As Boolean
            Dim results() As Object = Me.Invoke("IniciarSesionVisita", New Object() {UsuarioLogin, Clave})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IniciarSesionVisitaAsync(ByVal UsuarioLogin As String, ByVal Clave As String)
            Me.IniciarSesionVisitaAsync(UsuarioLogin, Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IniciarSesionVisitaAsync(ByVal UsuarioLogin As String, ByVal Clave As String, ByVal userState As Object)
            If (Me.IniciarSesionVisitaOperationCompleted Is Nothing) Then
                Me.IniciarSesionVisitaOperationCompleted = AddressOf Me.OnIniciarSesionVisitaOperationCompleted
            End If
            Me.InvokeAsync("IniciarSesionVisita", New Object() {UsuarioLogin, Clave}, Me.IniciarSesionVisitaOperationCompleted, userState)
        End Sub
        
        Private Sub OnIniciarSesionVisitaOperationCompleted(ByVal arg As Object)
            If (Not (Me.IniciarSesionVisitaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IniciarSesionVisitaCompleted(Me, New IniciarSesionVisitaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CambiarClave", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarClave(ByVal UsuarioLogin As String, ByVal ClaveActual As String, ByVal NuevaClave As String, ByVal Audit_UsuarioLogin As String) As Boolean
            Dim results() As Object = Me.Invoke("CambiarClave", New Object() {UsuarioLogin, ClaveActual, NuevaClave, Audit_UsuarioLogin})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarClaveAsync(ByVal UsuarioLogin As String, ByVal ClaveActual As String, ByVal NuevaClave As String, ByVal Audit_UsuarioLogin As String)
            Me.CambiarClaveAsync(UsuarioLogin, ClaveActual, NuevaClave, Audit_UsuarioLogin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarClaveAsync(ByVal UsuarioLogin As String, ByVal ClaveActual As String, ByVal NuevaClave As String, ByVal Audit_UsuarioLogin As String, ByVal userState As Object)
            If (Me.CambiarClaveOperationCompleted Is Nothing) Then
                Me.CambiarClaveOperationCompleted = AddressOf Me.OnCambiarClaveOperationCompleted
            End If
            Me.InvokeAsync("CambiarClave", New Object() {UsuarioLogin, ClaveActual, NuevaClave, Audit_UsuarioLogin}, Me.CambiarClaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarClaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarClaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarClaveCompleted(Me, New CambiarClaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearUsuario(ByVal PrimerApellido As String, ByVal SegundoApellido As String, ByVal PreNombres As String, ByVal TipoDocumento As Integer, ByVal NumeroDocumento As String, ByVal Audit_UsuarioLogin As String, ByVal Modulo As Integer) As String
            Dim results() As Object = Me.Invoke("CrearUsuario", New Object() {PrimerApellido, SegundoApellido, PreNombres, TipoDocumento, NumeroDocumento, Audit_UsuarioLogin, Modulo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrearUsuarioAsync(ByVal PrimerApellido As String, ByVal SegundoApellido As String, ByVal PreNombres As String, ByVal TipoDocumento As Integer, ByVal NumeroDocumento As String, ByVal Audit_UsuarioLogin As String, ByVal Modulo As Integer)
            Me.CrearUsuarioAsync(PrimerApellido, SegundoApellido, PreNombres, TipoDocumento, NumeroDocumento, Audit_UsuarioLogin, Modulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrearUsuarioAsync(ByVal PrimerApellido As String, ByVal SegundoApellido As String, ByVal PreNombres As String, ByVal TipoDocumento As Integer, ByVal NumeroDocumento As String, ByVal Audit_UsuarioLogin As String, ByVal Modulo As Integer, ByVal userState As Object)
            If (Me.CrearUsuarioOperationCompleted Is Nothing) Then
                Me.CrearUsuarioOperationCompleted = AddressOf Me.OnCrearUsuarioOperationCompleted
            End If
            Me.InvokeAsync("CrearUsuario", New Object() {PrimerApellido, SegundoApellido, PreNombres, TipoDocumento, NumeroDocumento, Audit_UsuarioLogin, Modulo}, Me.CrearUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrearUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.CrearUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrearUsuarioCompleted(Me, New CrearUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrearUsuariov2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrearUsuariov2(ByVal TipoDocumento As Integer, ByVal NumeroDocumento As String, ByVal Audit_UsuarioLogin As String, ByVal Modulo As Integer) As String()
            Dim results() As Object = Me.Invoke("CrearUsuariov2", New Object() {TipoDocumento, NumeroDocumento, Audit_UsuarioLogin, Modulo})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrearUsuariov2Async(ByVal TipoDocumento As Integer, ByVal NumeroDocumento As String, ByVal Audit_UsuarioLogin As String, ByVal Modulo As Integer)
            Me.CrearUsuariov2Async(TipoDocumento, NumeroDocumento, Audit_UsuarioLogin, Modulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrearUsuariov2Async(ByVal TipoDocumento As Integer, ByVal NumeroDocumento As String, ByVal Audit_UsuarioLogin As String, ByVal Modulo As Integer, ByVal userState As Object)
            If (Me.CrearUsuariov2OperationCompleted Is Nothing) Then
                Me.CrearUsuariov2OperationCompleted = AddressOf Me.OnCrearUsuariov2OperationCompleted
            End If
            Me.InvokeAsync("CrearUsuariov2", New Object() {TipoDocumento, NumeroDocumento, Audit_UsuarioLogin, Modulo}, Me.CrearUsuariov2OperationCompleted, userState)
        End Sub
        
        Private Sub OnCrearUsuariov2OperationCompleted(ByVal arg As Object)
            If (Not (Me.CrearUsuariov2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrearUsuariov2Completed(Me, New CrearUsuariov2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListarUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListarUsuario(ByVal UsuarioLogin As String, ByVal Clave As String) As String()
            Dim results() As Object = Me.Invoke("ListarUsuario", New Object() {UsuarioLogin, Clave})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListarUsuarioAsync(ByVal UsuarioLogin As String, ByVal Clave As String)
            Me.ListarUsuarioAsync(UsuarioLogin, Clave, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListarUsuarioAsync(ByVal UsuarioLogin As String, ByVal Clave As String, ByVal userState As Object)
            If (Me.ListarUsuarioOperationCompleted Is Nothing) Then
                Me.ListarUsuarioOperationCompleted = AddressOf Me.OnListarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ListarUsuario", New Object() {UsuarioLogin, Clave}, Me.ListarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnListarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarUsuarioCompleted(Me, New ListarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub VersionCompletedEventHandler(ByVal sender As Object, ByVal e As VersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub IniciarSesionVisitaCompletedEventHandler(ByVal sender As Object, ByVal e As IniciarSesionVisitaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IniciarSesionVisitaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CambiarClaveCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarClaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarClaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CrearUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As CrearUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrearUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CrearUsuariov2CompletedEventHandler(ByVal sender As Object, ByVal e As CrearUsuariov2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrearUsuariov2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ListarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ListarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
