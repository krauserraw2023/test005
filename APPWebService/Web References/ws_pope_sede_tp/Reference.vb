'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace ws_pope_sede_tp
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TablaMaestrasSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TablaMaestras
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private HelloWorldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FechaHoyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Listar_IDMaxOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Listar_TestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.APPWebService.My.MySettings.Default.APPWebService_ws_pope_sede_tp_TablaParametrica
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event HelloWorldCompleted As HelloWorldCompletedEventHandler
        
        '''<remarks/>
        Public Event FechaHoyCompleted As FechaHoyCompletedEventHandler
        
        '''<remarks/>
        Public Event Listar_IDMaxCompleted As Listar_IDMaxCompletedEventHandler
        
        '''<remarks/>
        Public Event ListarCompleted As ListarCompletedEventHandler
        
        '''<remarks/>
        Public Event Listar_TestCompleted As Listar_TestCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloWorld() As String
            Dim results() As Object = Me.Invoke("HelloWorld", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync()
            Me.HelloWorldAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync(ByVal userState As Object)
            If (Me.HelloWorldOperationCompleted Is Nothing) Then
                Me.HelloWorldOperationCompleted = AddressOf Me.OnHelloWorldOperationCompleted
            End If
            Me.InvokeAsync("HelloWorld", New Object(-1) {}, Me.HelloWorldOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloWorldOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloWorldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloWorldCompleted(Me, New HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FechaHoy", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FechaHoy() As Long
            Dim results() As Object = Me.Invoke("FechaHoy", New Object(-1) {})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FechaHoyAsync()
            Me.FechaHoyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FechaHoyAsync(ByVal userState As Object)
            If (Me.FechaHoyOperationCompleted Is Nothing) Then
                Me.FechaHoyOperationCompleted = AddressOf Me.OnFechaHoyOperationCompleted
            End If
            Me.InvokeAsync("FechaHoy", New Object(-1) {}, Me.FechaHoyOperationCompleted, userState)
        End Sub
        
        Private Sub OnFechaHoyOperationCompleted(ByVal arg As Object)
            If (Not (Me.FechaHoyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FechaHoyCompleted(Me, New FechaHoyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Listar_IDMax", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Listar_IDMax(ByVal IDLicencia As Integer, ByRef MensajeError As String) As Integer
            Dim results() As Object = Me.Invoke("Listar_IDMax", New Object() {IDLicencia, MensajeError})
            MensajeError = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Listar_IDMaxAsync(ByVal IDLicencia As Integer, ByVal MensajeError As String)
            Me.Listar_IDMaxAsync(IDLicencia, MensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Listar_IDMaxAsync(ByVal IDLicencia As Integer, ByVal MensajeError As String, ByVal userState As Object)
            If (Me.Listar_IDMaxOperationCompleted Is Nothing) Then
                Me.Listar_IDMaxOperationCompleted = AddressOf Me.OnListar_IDMaxOperationCompleted
            End If
            Me.InvokeAsync("Listar_IDMax", New Object() {IDLicencia, MensajeError}, Me.Listar_IDMaxOperationCompleted, userState)
        End Sub
        
        Private Sub OnListar_IDMaxOperationCompleted(ByVal arg As Object)
            If (Not (Me.Listar_IDMaxCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Listar_IDMaxCompleted(Me, New Listar_IDMaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Listar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Listar(ByVal IDLicencia As Integer, ByVal TipoTabla As Integer, ByVal Fecha As Long, ByRef MensajeError As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Listar", New Object() {IDLicencia, TipoTabla, Fecha, MensajeError})
            MensajeError = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListarAsync(ByVal IDLicencia As Integer, ByVal TipoTabla As Integer, ByVal Fecha As Long, ByVal MensajeError As String)
            Me.ListarAsync(IDLicencia, TipoTabla, Fecha, MensajeError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListarAsync(ByVal IDLicencia As Integer, ByVal TipoTabla As Integer, ByVal Fecha As Long, ByVal MensajeError As String, ByVal userState As Object)
            If (Me.ListarOperationCompleted Is Nothing) Then
                Me.ListarOperationCompleted = AddressOf Me.OnListarOperationCompleted
            End If
            Me.InvokeAsync("Listar", New Object() {IDLicencia, TipoTabla, Fecha, MensajeError}, Me.ListarOperationCompleted, userState)
        End Sub
        
        Private Sub OnListarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarCompleted(Me, New ListarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Listar_Test", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Listar_Test(ByVal IDLicencia As Integer, ByVal TipoTabla As TipoTabla, ByVal Fecha As Long) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("Listar_Test", New Object() {IDLicencia, TipoTabla, Fecha})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Listar_TestAsync(ByVal IDLicencia As Integer, ByVal TipoTabla As TipoTabla, ByVal Fecha As Long)
            Me.Listar_TestAsync(IDLicencia, TipoTabla, Fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Listar_TestAsync(ByVal IDLicencia As Integer, ByVal TipoTabla As TipoTabla, ByVal Fecha As Long, ByVal userState As Object)
            If (Me.Listar_TestOperationCompleted Is Nothing) Then
                Me.Listar_TestOperationCompleted = AddressOf Me.OnListar_TestOperationCompleted
            End If
            Me.InvokeAsync("Listar_Test", New Object() {IDLicencia, TipoTabla, Fecha}, Me.Listar_TestOperationCompleted, userState)
        End Sub
        
        Private Sub OnListar_TestOperationCompleted(ByVal arg As Object)
            If (Not (Me.Listar_TestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Listar_TestCompleted(Me, New Listar_TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum TipoTabla
        
        '''<remarks/>
        Ninguno
        
        '''<remarks/>
        SIS_Tabla
        
        '''<remarks/>
        CLA_ClasificacionTipo
        
        '''<remarks/>
        CLA_Ficha
        
        '''<remarks/>
        CLA_Resultado
        
        '''<remarks/>
        CLA_Valores
        
        '''<remarks/>
        CLA_Variable
        
        '''<remarks/>
        GEN_Biometrico
        
        '''<remarks/>
        GEN_Dependencia
        
        '''<remarks/>
        GEN_Discapacidad
        
        '''<remarks/>
        GEN_DocumentoTipo
        
        '''<remarks/>
        GEN_EstadoCivil
        
        '''<remarks/>
        GEN_FamiliaTipo
        
        '''<remarks/>
        GEN_GradoInstruccion
        
        '''<remarks/>
        GEN_Idioma
        
        '''<remarks/>
        GEN_Ocupacion
        
        '''<remarks/>
        GEN_OcupacionGrupo
        
        '''<remarks/>
        GEN_OcupacionTipo
        
        '''<remarks/>
        GEN_Profesion
        
        '''<remarks/>
        GEN_Rasgo
        
        '''<remarks/>
        GEN_RasgoTipo
        
        '''<remarks/>
        GEN_Region
        
        '''<remarks/>
        GEN_Sexo
        
        '''<remarks/>
        GLO_Parentesco
        
        '''<remarks/>
        INT_AutoridadJudicial
        
        '''<remarks/>
        INT_AutoridadJudicialTipo
        
        '''<remarks/>
        INT_Banda
        
        '''<remarks/>
        INT_BandaMiembroTipo
        
        '''<remarks/>
        INT_BandaTipo
        
        '''<remarks/>
        INT_DelitoCapitulo
        
        '''<remarks/>
        INT_DelitoSeccion
        
        '''<remarks/>
        INT_DelitosEspecifico
        
        '''<remarks/>
        INT_DelitosGenerico
        
        '''<remarks/>
        INT_DelitoTipo
        
        '''<remarks/>
        INT_Estado
        
        '''<remarks/>
        INT_LibertadTipo
        
        '''<remarks/>
        INT_MotivoIngreso
        
        '''<remarks/>
        INT_MovimientoGrupo
        
        '''<remarks/>
        INT_MovimientoMotivo
        
        '''<remarks/>
        INT_MovimientoTipo
        
        '''<remarks/>
        INT_Penal
        
        '''<remarks/>
        INT_SenaParticular
        
        '''<remarks/>
        INT_SenaParticularTipo
        
        '''<remarks/>
        INT_SentenciaTipo
        
        '''<remarks/>
        INT_SituacionJuridica
        
        '''<remarks/>
        INT_Traslado
        
        '''<remarks/>
        INT_TrasladoTipo
        
        '''<remarks/>
        REG_DOC_Tipo
        
        '''<remarks/>
        RPT_Cuadro002
        
        '''<remarks/>
        RPT_Cuadro003
        
        '''<remarks/>
        RPT_Cuadro007
        
        '''<remarks/>
        RPT_Cuadro008
        
        '''<remarks/>
        RPT_Cuadro010
        
        '''<remarks/>
        RPT_Cuadro012
        
        '''<remarks/>
        RPT_Cuadro013
        
        '''<remarks/>
        RPT_Reporte
        
        '''<remarks/>
        UBG_Departamento
        
        '''<remarks/>
        UBG_Distrito
        
        '''<remarks/>
        UBG_Pais
        
        '''<remarks/>
        UBG_Provincia
        
        '''<remarks/>
        VIS_Etapa
        
        '''<remarks/>
        VIS_Regimen
        
        '''<remarks/>
        VIS_RestriccionTipo
        
        '''<remarks/>
        VIS_SancionTipo
        
        '''<remarks/>
        VIS_Tipo
        
        '''<remarks/>
        REG_DOC_subtipo
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub HelloWorldCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWorldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloWorldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub FechaHoyCompletedEventHandler(ByVal sender As Object, ByVal e As FechaHoyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FechaHoyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Listar_IDMaxCompletedEventHandler(ByVal sender As Object, ByVal e As Listar_IDMaxCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Listar_IDMaxCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property MensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ListarCompletedEventHandler(ByVal sender As Object, ByVal e As ListarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property MensajeError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Listar_TestCompletedEventHandler(ByVal sender As Object, ByVal e As Listar_TestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Listar_TestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
End Namespace
